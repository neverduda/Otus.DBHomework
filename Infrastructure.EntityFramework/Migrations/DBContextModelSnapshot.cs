// <auto-generated />
using System;
using Infrastructure.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.EntityFramework.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Advertisement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("BuyerId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("PublicationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SellerId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SellerId");

                    b.ToTable("Advertisements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BuyerId = 2,
                            ProductId = 1,
                            SellerId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            BuyerId = 3,
                            ProductId = 2,
                            SellerId = 2,
                            Status = 2
                        },
                        new
                        {
                            Id = 3,
                            ProductId = 3,
                            SellerId = 3,
                            Status = 3
                        },
                        new
                        {
                            Id = 4,
                            ProductId = 4,
                            SellerId = 4,
                            Status = 4
                        },
                        new
                        {
                            Id = 5,
                            ProductId = 5,
                            SellerId = 5,
                            Status = 5
                        });
                });

            modelBuilder.Entity("Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Desription")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Phone",
                            Price = 12000
                        },
                        new
                        {
                            Id = 2,
                            Name = "Basketball ball Wilson",
                            Price = 7000
                        },
                        new
                        {
                            Id = 3,
                            Name = "Nike sport shoes",
                            Price = 15000
                        },
                        new
                        {
                            Id = 4,
                            Name = "SUP Serf",
                            Price = 50000
                        },
                        new
                        {
                            Id = 5,
                            Name = "Backpack",
                            Price = 5000
                        });
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Sergey",
                            LastName = "Dudkin",
                            PhoneNumber = "77777"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Mary",
                            LastName = "Mary",
                            PhoneNumber = "888888888"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Serg",
                            PhoneNumber = "888888888"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Alex",
                            PhoneNumber = "111"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Ivan",
                            LastName = "Vasilev",
                            PhoneNumber = "222"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Advertisement", b =>
                {
                    b.HasOne("Domain.Entities.User", "Buyer")
                        .WithMany("BuyerAdvertisements")
                        .HasForeignKey("BuyerId");

                    b.HasOne("Domain.Entities.Product", "Product")
                        .WithMany("Advertisements")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "Seller")
                        .WithMany("SellerAdvertisements")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buyer");

                    b.Navigation("Product");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("Domain.Entities.Product", b =>
                {
                    b.Navigation("Advertisements");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("BuyerAdvertisements");

                    b.Navigation("SellerAdvertisements");
                });
#pragma warning restore 612, 618
        }
    }
}
